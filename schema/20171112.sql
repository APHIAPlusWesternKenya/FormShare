-- MySQL Script generated by MySQL Workbench
-- Sun 12 Nov 2017 07:28:07 PM CST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema formshare
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema formshare
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `formshare` DEFAULT CHARACTER SET utf8 ;
USE `formshare` ;

-- -----------------------------------------------------
-- Table `formshare`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`user` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'ID of the user',
  `user_name` VARCHAR(120) NULL COMMENT 'Name of the user',
  `user_password` VARCHAR(120) NULL COMMENT 'Encrypted password',
  `user_email` VARCHAR(120) NULL COMMENT 'Email of the user',
  `user_about` TEXT NULL COMMENT 'Extra information of the user',
  `user_cdate` DATETIME NULL COMMENT 'Creation date and time',
  `user_llogin` DATETIME NULL COMMENT 'Last login date and time\n',
  `user_super` INT(1) NULL COMMENT 'Whether the user is super user (1) or not (0)',
  `user_logo` TEXT NULL COMMENT 'link of file ID to the logo. This is for organizations',
  `extra` TEXT NULL COMMENT 'Extra stores extra information about the user in JSON form',
  `tags` TEXT NULL COMMENT 'Tags store extra information as JSON array. This can be uses to store controlled vocabularies',
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Stores the users of Formshare';


-- -----------------------------------------------------
-- Table `formshare`.`log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`log` (
  `entry_id` VARCHAR(64) NOT NULL COMMENT 'Entry ID',
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User performing the entry into the log',
  `entry_type` INT(1) NULL COMMENT 'Entry type: (1) Web interface, (2) API, (3) ODK ',
  `entry_info` TEXT NULL COMMENT 'Entry information',
  PRIMARY KEY (`entry_id`),
  INDEX `fk_log_user_idx` (`user_id` ASC),
  CONSTRAINT `fk_log_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `formshare`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Stores log entries through the application';


-- -----------------------------------------------------
-- Table `formshare`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`project` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID. Autogenerated',
  `project_name` VARCHAR(120) NOT NULL COMMENT 'Project name',
  `project_abstract` TEXT NULL COMMENT 'Project abstract',
  `project_cdate` VARCHAR(45) NULL COMMENT 'Creation date.',
  `project_creator` VARCHAR(45) NULL COMMENT 'Person creating the project',
  `project_cremail` VARCHAR(45) NULL COMMENT 'Email of the creator',
  `project_contact` VARCHAR(120) NULL COMMENT 'Project contact',
  `project_coemail` VARCHAR(45) NULL COMMENT 'Project contact email',
  `extra` TEXT NULL COMMENT 'Extra stores extra information about the project in JSON form',
  `tags` TEXT NULL COMMENT 'Tags store extra information as JSON array. This can be uses to store controlled vocabularies',
  PRIMARY KEY (`user_id`, `project_id`),
  CONSTRAINT `fk_project_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `formshare`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Store the the user projects';


-- -----------------------------------------------------
-- Table `formshare`.`form`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`form` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `form_id` VARCHAR(120) NOT NULL COMMENT 'FormID as read from the XLSX form',
  `form_name` VARCHAR(120) NULL COMMENT 'Name of the form',
  `form_about` TEXT NULL COMMENT 'About this form',
  `form_cdate` DATETIME NULL COMMENT 'Creation date',
  `form_directory` VARCHAR(120) NULL COMMENT 'Directory in the repository storing this form',
  `form_accsub` INT(1) NULL COMMENT 'Accept submissions. 1=Yes, 0=No',
  `form_public` INT(1) NULL COMMENT 'Whether the form is public. 1=Yes, 0=No',
  `extra` TEXT NULL COMMENT 'Extra stores extra information about the ODK form in JSON form',
  `tags` TEXT NULL COMMENT 'Tags store extra information as JSON array. This can be uses to store controlled vocabularies',
  `parent_user` VARCHAR(120) NULL COMMENT 'Parent user',
  `parent_project` VARCHAR(12) NULL COMMENT 'Parent project',
  `parent_form` VARCHAR(120) NULL COMMENT 'Parent form. A form can be a subversion of another one',
  PRIMARY KEY (`user_id`, `project_id`, `form_id`),
  INDEX `fk_form_form1_idx` (`parent_user` ASC, `parent_project` ASC, `parent_form` ASC),
  CONSTRAINT `fk_form_project1`
    FOREIGN KEY (`user_id` , `project_id`)
    REFERENCES `formshare`.`project` (`user_id` , `project_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_form_form1`
    FOREIGN KEY (`parent_user` , `parent_project` , `parent_form`)
    REFERENCES `formshare`.`form` (`user_id` , `project_id` , `form_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'ODK Forms in the system';


-- -----------------------------------------------------
-- Table `formshare`.`enumerator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`enumerator` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `enum_id` VARCHAR(120) NOT NULL COMMENT 'Enumerator ID',
  `enum_name` VARCHAR(120) NULL COMMENT 'Enumerator name\n',
  `enum_password` VARCHAR(120) NULL COMMENT 'Encrypted password of the enumerator',
  `enum_active` INT(1) NULL COMMENT 'Whether the enumerator is active. Yes (1) or not (0)',
  `enum_cdate` DATETIME NULL COMMENT 'Creation date',
  `extra` TEXT NULL COMMENT 'Extra stores extra information about the enumerator in JSON form',
  `tags` TEXT NULL COMMENT 'Tags store extra information as JSON array. This can be uses to store controlled vocabularies',
  PRIMARY KEY (`user_id`, `project_id`, `enum_id`),
  CONSTRAINT `fk_enumerator_project1`
    FOREIGN KEY (`user_id` , `project_id`)
    REFERENCES `formshare`.`project` (`user_id` , `project_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Enumerators that can submmit ODK data';


-- -----------------------------------------------------
-- Table `formshare`.`submitter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`submitter` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `enum_id` VARCHAR(120) NOT NULL COMMENT 'Enumerator ID',
  `form_user` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `form_project` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `form_id` VARCHAR(120) NOT NULL COMMENT 'Form ID',
  PRIMARY KEY (`user_id`, `project_id`, `enum_id`, `form_user`, `form_project`, `form_id`),
  INDEX `fk_submitter_form1_idx` (`form_user` ASC, `form_project` ASC, `form_id` ASC),
  CONSTRAINT `fk_submitter_enumerator1`
    FOREIGN KEY (`user_id` , `project_id` , `enum_id`)
    REFERENCES `formshare`.`enumerator` (`user_id` , `project_id` , `enum_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_submitter_form1`
    FOREIGN KEY (`form_user` , `form_project` , `form_id`)
    REFERENCES `formshare`.`form` (`user_id` , `project_id` , `form_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Enumerators able to submmit data to a form';


-- -----------------------------------------------------
-- Table `formshare`.`enumgroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`enumgroup` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `group_id` VARCHAR(12) NOT NULL COMMENT 'Group ID',
  `group_name` VARCHAR(120) NULL COMMENT 'Group name',
  `group_desc` TEXT NULL COMMENT 'Group description',
  `group_cdate` DATETIME NULL COMMENT 'Creation date',
  `group_active` INT(1) NULL COMMENT 'Whether the group is active',
  `extra` TEXT NULL COMMENT 'Extra stores extra information about the group in JSON form',
  `tags` TEXT NULL COMMENT 'Tags store extra information as JSON array. This can be uses to store controlled vocabularies',
  PRIMARY KEY (`user_id`, `project_id`, `group_id`),
  CONSTRAINT `fk_enumgroup_project1`
    FOREIGN KEY (`user_id` , `project_id`)
    REFERENCES `formshare`.`project` (`user_id` , `project_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Groups that can submit ODK data';


-- -----------------------------------------------------
-- Table `formshare`.`enumingroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`enumingroup` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `group_id` VARCHAR(12) NOT NULL COMMENT 'Group ID',
  `enum_user` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `enum_project` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `enum_id` VARCHAR(120) NOT NULL COMMENT 'Enumerator ID',
  PRIMARY KEY (`user_id`, `project_id`, `group_id`, `enum_user`, `enum_project`, `enum_id`),
  INDEX `fk_enumingroup_enumerator1_idx` (`enum_user` ASC, `enum_project` ASC, `enum_id` ASC),
  CONSTRAINT `fk_enumingroup_enumgroup1`
    FOREIGN KEY (`user_id` , `project_id` , `group_id`)
    REFERENCES `formshare`.`enumgroup` (`user_id` , `project_id` , `group_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_enumingroup_enumerator1`
    FOREIGN KEY (`enum_user` , `enum_project` , `enum_id`)
    REFERENCES `formshare`.`enumerator` (`user_id` , `project_id` , `enum_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Table of enumerators in groups';


-- -----------------------------------------------------
-- Table `formshare`.`grpsubmitter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`grpsubmitter` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `group_id` VARCHAR(12) NOT NULL COMMENT 'Group ID',
  `form_user` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `form_project` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `form_id` VARCHAR(120) NOT NULL COMMENT 'From ID',
  PRIMARY KEY (`user_id`, `project_id`, `group_id`, `form_user`, `form_project`, `form_id`),
  INDEX `fk_grpsubmitter_form1_idx` (`form_user` ASC, `form_project` ASC, `form_id` ASC),
  CONSTRAINT `fk_grpsubmitter_enumgroup1`
    FOREIGN KEY (`user_id` , `project_id` , `group_id`)
    REFERENCES `formshare`.`enumgroup` (`user_id` , `project_id` , `group_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_grpsubmitter_form1`
    FOREIGN KEY (`form_user` , `form_project` , `form_id`)
    REFERENCES `formshare`.`form` (`user_id` , `project_id` , `form_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Groups able to submit data to a ODK form';


-- -----------------------------------------------------
-- Table `formshare`.`datauser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`datauser` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `duser_id` VARCHAR(120) NOT NULL COMMENT 'Data user ID',
  `user_name` VARCHAR(120) NULL COMMENT 'Data user name\n',
  `user_password` VARCHAR(120) NULL COMMENT 'Encrypted password of the data user',
  `user_active` INT(1) NULL COMMENT 'Whether the data user is active. Yes (1) or not (0)',
  `user_cdate` DATETIME NULL COMMENT 'Creation date',
  `extra` TEXT NULL COMMENT 'Extra stores extra information about the data user\n in JSON form',
  `tags` TEXT NULL COMMENT 'Tags store extra information as JSON array. This can be uses to store controlled vocabularies',
  PRIMARY KEY (`user_id`, `project_id`, `duser_id`),
  CONSTRAINT `fk_enumerator_project10`
    FOREIGN KEY (`user_id` , `project_id`)
    REFERENCES `formshare`.`project` (`user_id` , `project_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Data users that can view and download collected data';


-- -----------------------------------------------------
-- Table `formshare`.`datagroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`datagroup` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `group_id` VARCHAR(12) NOT NULL COMMENT 'Group ID',
  `group_name` VARCHAR(120) NULL COMMENT 'Group name',
  `group_desc` TEXT NULL COMMENT 'Group description',
  `group_cdate` DATETIME NULL COMMENT 'Creation date',
  `group_active` INT(1) NULL COMMENT 'Whether the group is active',
  `extra` TEXT NULL COMMENT 'Extra stores extra information about the group in JSON form',
  `tags` TEXT NULL COMMENT 'Tags store extra information as JSON array. This can be uses to store controlled vocabularies',
  PRIMARY KEY (`user_id`, `project_id`, `group_id`),
  CONSTRAINT `fk_enumgroup_project10`
    FOREIGN KEY (`user_id` , `project_id`)
    REFERENCES `formshare`.`project` (`user_id` , `project_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Groups that can view or download data';


-- -----------------------------------------------------
-- Table `formshare`.`useringroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`useringroup` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User id',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `group_id` VARCHAR(12) NOT NULL COMMENT 'Data access Group ID',
  `datauser_user` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `datauser_project` VARCHAR(12) NOT NULL COMMENT 'Project code',
  `datauser_id` VARCHAR(120) NOT NULL COMMENT 'Data user ID',
  PRIMARY KEY (`user_id`, `project_id`, `group_id`, `datauser_user`, `datauser_project`, `datauser_id`),
  INDEX `fk_useringroup_datauser1_idx` (`datauser_user` ASC, `datauser_project` ASC, `datauser_id` ASC),
  CONSTRAINT `fk_useringroup_datagroup1`
    FOREIGN KEY (`user_id` , `project_id` , `group_id`)
    REFERENCES `formshare`.`datagroup` (`user_id` , `project_id` , `group_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_useringroup_datauser1`
    FOREIGN KEY (`datauser_user` , `datauser_project` , `datauser_id`)
    REFERENCES `formshare`.`datauser` (`user_id` , `project_id` , `duser_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Data users in groups';


-- -----------------------------------------------------
-- Table `formshare`.`groupaccess`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`groupaccess` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `group_id` VARCHAR(12) NOT NULL COMMENT 'Data Group ID',
  `form_user` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `form_project` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `form_id` VARCHAR(120) NOT NULL COMMENT 'Form ID',
  PRIMARY KEY (`user_id`, `project_id`, `group_id`, `form_user`, `form_project`, `form_id`),
  INDEX `fk_groupaccess_form1_idx` (`form_user` ASC, `form_project` ASC, `form_id` ASC),
  CONSTRAINT `fk_groupaccess_datagroup1`
    FOREIGN KEY (`user_id` , `project_id` , `group_id`)
    REFERENCES `formshare`.`datagroup` (`user_id` , `project_id` , `group_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_groupaccess_form1`
    FOREIGN KEY (`form_user` , `form_project` , `form_id`)
    REFERENCES `formshare`.`form` (`user_id` , `project_id` , `form_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Groups that can view / download ODK data\n';


-- -----------------------------------------------------
-- Table `formshare`.`useraccess`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formshare`.`useraccess` (
  `user_id` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `project_id` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `duser_id` VARCHAR(120) NOT NULL COMMENT 'Data user',
  `form_user` VARCHAR(120) NOT NULL COMMENT 'User ID',
  `form_project` VARCHAR(12) NOT NULL COMMENT 'Project ID',
  `form_id` VARCHAR(120) NOT NULL COMMENT 'Form ID',
  PRIMARY KEY (`user_id`, `project_id`, `duser_id`, `form_user`, `form_project`, `form_id`),
  INDEX `fk_useraccess_form1_idx` (`form_user` ASC, `form_project` ASC, `form_id` ASC),
  CONSTRAINT `fk_useraccess_datauser1`
    FOREIGN KEY (`user_id` , `project_id` , `duser_id`)
    REFERENCES `formshare`.`datauser` (`user_id` , `project_id` , `duser_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_useraccess_form1`
    FOREIGN KEY (`form_user` , `form_project` , `form_id`)
    REFERENCES `formshare`.`form` (`user_id` , `project_id` , `form_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Data users that can views or download ODK form data';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
