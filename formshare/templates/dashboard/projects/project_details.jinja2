{% extends 'dashboard/index.jinja2' %}
{% import 'dashboard/macros/form.jinja2' as form %}


{% block titlesection %}{{ _("Project") }} {% endblock titlesection %}

{% block css %}
    {{ super() }}

    {% cssresource request,'formshare','bsmarkdown' %}
    {% cssresource request,'formshare','leaflet_beautify_marker_icon' %}

{% endblock css %}

{% block topScripts %}
    {{ super() }}

    {% jsresource request,'formshare','markdown' %}
    {% jsresource request,'formshare','leaflet_beautify_marker_icon' %}
    {% jsresource request,'formshare','taphold' %}
    {% jsresource request,'formshare','clipboard' %}


{% endblock topScripts %}

{% block dashheader %}
    {% block breadcrumbs %}
        {% if projectData.user_collaborates  %}
            <div class="row wrapper border-bottom white-bg page-heading">
                {% include 'dashboard/projects/snippets/brdcrbs_prjdtls.jinja2' %}
            </div>
        {% endif %}
    {% endblock breadcrumbs %}
{% endblock dashheader %}

{% block maincontent %}
    {% if viewingSelfAccount %}
        {{ super() }}
    {% else %}
        {{ form.display_errors(errors,true) }}
        {% if not projectData.user_collaborates  %}
            {% include 'dashboard/profile/snippets/profile_head.jinja2' %}
        {% endif %}
        {% include 'dashboard/projects/snippets/project_details.jinja2' %}
        {% set action_url = request.route_url('form_add',userid=activeProject.owner,projcode=activeProject.project_code) %}
        {% include 'dashboard/projects/forms/snippets/upload_form.jinja2' %}
    {% endif %}

{% endblock maincontent %}

{% block mainsection %}
    {% if viewingSelfAccount %}
        {{ form.display_errors(errors,true) }}
        {% include 'dashboard/projects/snippets/project_details.jinja2' %}
        {% set action_url = request.route_url('form_add',userid=activeProject.owner,projcode=activeProject.project_code) %}
        {% include 'dashboard/projects/forms/snippets/upload_form.jinja2' %}
    {% else %}
        {{ super() }}
    {% endif %}
{% endblock mainsection %}

{% block scripts %}
    {% jsresource request,'formshare','inspinia' %}
    {% set messageData = request.session.pop_flash() %}
    {% if messageData|length > 0 %}
        <script>
            $(document).ready(function() {
                messageData = '{{ messageData[0] }}';
                swal({
                    title: 'FormShare',
                    text: messageData,
                    type: "success"
                });

            });
        </script>
    {% endif %}

    <script>
        $(document).ready(function() {
            new ClipboardJS('.clipboard');

            $('#upload_form').submit(function() {
                $('#upload_form_button').prop("disabled", "disabled");
                $('#cross_upload_form_button').prop("disabled", "disabled");
                $('#cancel_upload_form_button').prop("disabled", "disabled");
                $('#upload_form_button').html('{{ _("One moment please...") }}');
            });

            $('.custom-file-input').on('change', function() {
                let fileName = $(this).val().split('\\').pop();
                $(this).next('.custom-file-label').addClass("selected").html(fileName);
            });

            $('#add_form').click(function () {
                $("#xlsx").val("");
                $('.custom-file-input').next('.custom-file-label').addClass("selected").html("{{ _('Choose file...') }}");
            });

            $('.remove_form').click(function () {
                var action_url = $( this ).attr('urn');
                swal({
                        title: "{{ _('Are you sure?') }}",
                        text: "{{ _('All the data in this form will be deleted!') }}",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "{{ _('Yes, delete this form!') }}",
                        cancelButtonText: "{{ _('Oops!, cancel!') }}",
                        closeOnConfirm: true,
                        closeOnCancel: true },
                    function (isConfirm) {
                        if (isConfirm) {
                            var form = document.createElement('form');
                            form.setAttribute('method', 'post');
                            form.setAttribute('action', action_url);
                            form.style.display = 'hidden';

                            var i = document.createElement("input"); //input element, text
                            i.setAttribute('type',"text");
                            i.setAttribute('name',"csrf_token");
                            i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                            form.appendChild(i);

                            document.body.appendChild(form);
                            form.submit();
                        }
                    });
            });

            $('.change-status').click(function () {
                var action_url = $( this ).attr('urn');
                var title = $( this ).attr('data-title');
                var message = $( this ).attr('data-message');
                swal({
                        title: title,
                        text: message,
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "{{ _('Yes, go ahead!') }}",
                        cancelButtonText: "{{ _('Oops!, cancel!') }}",
                        closeOnConfirm: true,
                        closeOnCancel: true },
                    function (isConfirm) {
                        if (isConfirm) {
                            var form = document.createElement('form');
                            form.setAttribute('method', 'post');
                            form.setAttribute('action', action_url);
                            form.style.display = 'hidden';

                            var i = document.createElement("input"); //input element, text
                            i.setAttribute('type',"text");
                            i.setAttribute('name',"csrf_token");
                            i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                            form.appendChild(i);

                            document.body.appendChild(form);
                            form.submit();
                        }
                    });
            });

            $('#delete_project').click(function () {
                swal({
                        title: "{{ _('Are you sure?') }}",
                        text: "{{ _('All the data in this project will be deleted!') }}",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "{{ _('Yes, delete it!') }}",
                        cancelButtonText: "{{ _('Ups, cancel!') }}",
                        closeOnConfirm: true,
                        closeOnCancel: true },
                    function (isConfirm) {
                        if (isConfirm) {
                            var form = document.createElement('form');
                            form.setAttribute('method', 'post');
                            form.setAttribute('action', '{{ request.route_url('project_delete',userid=projectData.owner,projcode=projectData.project_code,_query={'fail':request.url}) }}');
                            form.style.display = 'hidden';

                            var i = document.createElement("input"); //input element, text
                            i.setAttribute('type',"text");
                            i.setAttribute('name',"csrf_token");
                            i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                            form.appendChild(i);

                            document.body.appendChild(form);
                            form.submit();
                        }
                    });
            });
            {% if projectData.access_type != 4 %}
                $(".assistant-item").on("taphold", function()
                {
                    var action_url = $( this ).attr('urn');
                    swal({
                            title: "{{ _('Are you sure?') }}",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "{{ _('Yes, remove it!') }}",
                            cancelButtonText: "{{ _('Oops!, cancel!') }}",
                            closeOnConfirm: true,
                            closeOnCancel: true },
                        function (isConfirm) {
                            if (isConfirm) {
                                var form = document.createElement('form');
                                form.setAttribute('method', 'post');
                                form.setAttribute('action', action_url);
                                form.style.display = 'hidden';

                                var i = document.createElement("input"); //input element, text
                                i.setAttribute('type',"text");
                                i.setAttribute('name',"csrf_token");
                                i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                                form.appendChild(i);

                                document.body.appendChild(form);
                                form.submit();
                            }
                        });
                });
                $(".group-item").on("taphold", function()
                {
                    var action_url = $( this ).attr('urn');
                    swal({
                            title: "{{ _('Are you sure?') }}",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "{{ _('Yes, remove it!') }}",
                            cancelButtonText: "{{ _('Oops!, cancel!') }}",
                            closeOnConfirm: true,
                            closeOnCancel: true },
                        function (isConfirm) {
                            if (isConfirm) {
                                var form = document.createElement('form');
                                form.setAttribute('method', 'post');
                                form.setAttribute('action', action_url);
                                form.style.display = 'hidden';

                                var i = document.createElement("input"); //input element, text
                                i.setAttribute('type',"text");
                                i.setAttribute('name',"csrf_token");
                                i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                                form.appendChild(i);

                                document.body.appendChild(form);
                                form.submit();
                            }
                        });
                });
                $(".file-item").on("taphold", function()
                {
                    var action_url = $( this ).attr('urn');
                    swal({
                            title: "{{ _('Are you sure?') }}",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "{{ _('Yes, remove it!') }}",
                            cancelButtonText: "{{ _('Oops!, cancel!') }}",
                            closeOnConfirm: true,
                            closeOnCancel: true },
                        function (isConfirm) {
                            if (isConfirm) {
                                var form = document.createElement('form');
                                form.setAttribute('method', 'post');
                                form.setAttribute('action', action_url);
                                form.style.display = 'hidden';

                                var i = document.createElement("input"); //input element, text
                                i.setAttribute('type',"text");
                                i.setAttribute('name',"csrf_token");
                                i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                                form.appendChild(i);

                                document.body.appendChild(form);
                                form.submit();
                            }
                        });
                });

            {% endif %}

        });
    </script>

        <script>
            {% if submissions > 0 and withgps > 0 %}
                var mymap = L.map('projmap').setView([51.505, -0.09], 13);
                L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
                    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                    maxZoom: 18,
                    id: 'mapbox.streets',
                    accessToken: 'pk.eyJ1IjoicWxhbmRzIiwiYSI6ImNqZHB1ZDh4YzEwZHEyeG1rcjc0NmFsNzIifQ.i3YebmNDByns1c1ixZE0bA'
                }).addTo(mymap);

                var element = document.getElementById('mapbox');
                var full_screen = false;
                var normal_height = $("#projmap").height();
                new ResizeSensor(element, function() {
                    var window_width = $(window).width();
                    var element_width =  element.clientWidth;
                    if ((element_width / window_width) >= 0.80)
                    {
                        $("#projmap").height($(window).height()-80);
                        mymap.invalidateSize();
                        //console.log('Changed to ' + element.clientWidth);
                        full_screen = true;
                    }
                    else
                    {
                        if (full_screen)
                        {
                            $("#projmap").height(normal_height);
                            mymap.invalidateSize();
                            //console.log('Back to ' + normal_height);
                            //console.log('Changed to ' + element.clientWidth);
                            full_screen = false;
                        }
                    }
                });

                var options = {
                    iconShape: 'circle-dot',
                    borderWidth: 5,
                    borderColor: '#b3334f'
                };

                function get_more(query_from, query_size)
                {

                    let url = new URL("{{ request.route_url('project_download_gpspoints',userid=userid,projcode=projectData.project_code) }}");
                    url.searchParams.append('from', query_from);
                    url.searchParams.append('size', query_size);

                    $.getJSON(url, function( data ) {
                        var markers = [];
                        data.points.forEach(function(entry)
                        {
                            var marker = L.marker([entry.lati, entry.long], {
                                icon: L.BeautifyIcon.icon(entry.options),
                                draggable: false
                            }).addTo(mymap);
                            markers.push(marker);
                        });
                        var group = new L.featureGroup(markers);
                        mymap.fitBounds(group.getBounds());
                    });
                }

                // TODO: We need to perfom pagination here so the size sould not be 10000
                get_more(0,10000);
            {% endif %}
            {% if projectData.project_abstract != None %}

                $(document).ready(function() {
                    var val = $("#abstract_hidden").val();
                    document.getElementById('project_abstract').innerHTML = markdown.toHTML(val);

                    {% if projectData.project_abstract|length < 170 %}
                        $('.scroll_content').slimscroll({'height': '60px'});
                    {% else %}
                        $('.scroll_content').slimscroll();
                    {% endif %}
                });

            {% endif %}
        </script>
{% endblock scripts %}